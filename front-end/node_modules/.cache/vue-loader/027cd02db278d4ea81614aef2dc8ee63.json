{"remainingRequest":"C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\src\\views\\Questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\src\\views\\Questions.vue","mtime":1639041097862},{"path":"C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1638952123769},{"path":"C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638952117419},{"path":"C:\\Users\\Jeremy\\americanjeremy\\Project 4\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1638952124996}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnUXVlc3Rpb25zJywNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY3VycmVudElkOiAiIiwNCiAgICAgIHF1ZXN0aW9uczogW10sDQogICAgICBwb3NpdGlvbjogMCwNCiAgICAgIHByZXZpb3VzQ29ycmVjdDogMCwNCiAgICAgIGxvZ2dlZEluOiAiIiwNCiAgICAgIHVzZXI6IG51bGwsDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICB9LA0KICBjcmVhdGVkKCkgew0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0SXRlbXMoKSB7DQogICAgICB0cnkgew0KICAgICAgICBsZXQgdGlsZSA9IHRoaXMuY3VycmVudElkDQogICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgiL2FwaS9xdWVzdGlvbnMvIiArIHRpbGUpOw0KICAgICAgICB0aGlzLnF1ZXN0aW9ucyA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgfSwNCiAgICBnb1RvTmV4dCgpIHsNCiAgICAgIGNvbnN0IHJicyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W25hbWU9ImFuc3dlciJdJyk7DQogICAgICAgIGxldCBjb3JyZWN0QW5zID0gdGhpcy5xdWVzdGlvbnNbdGhpcy5wb3NpdGlvbl0uYW5zd2VyDQogICAgICAgIGZvciAoY29uc3Qgb3B0IG9mIHJicykgew0KICAgICAgICAgIGlmIChvcHQuY2hlY2tlZCkgew0KICAgICAgICAgICAgaWYgKGNvcnJlY3RBbnMgPT0gb3B0LnZhbHVlKSB7DQogICAgICAgICAgICAgIHRoaXMucHJldmlvdXNDb3JyZWN0ID0gMTsNCiAgICAgICAgICAgICAgaWYgKHRoaXMudXNlcikgew0KICAgICAgICAgICAgICAgICAgdGhpcy51c2VyLnBvaW50c0Vhcm5lZCArPSAxOw0KICAgICAgICAgICAgICB9ICAgDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICB0aGlzLnByZXZpb3VzQ29ycmVjdCA9IDA7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB0aGlzLnBvc2l0aW9uICs9IDE7DQogICAgfSwNCiAgICByZXR1cm5Ib21lKCkgew0KICAgICAgaWYgKHRoaXMudXNlcikgew0KICAgICAgICAvL2NvbnNvbGUubG9nKCJoYXkgdXNlciIpDQogICAgICAgIGF4aW9zLnB1dCgiL2FwaS9hY2NvdW50Iiwgew0KICAgICAgICAgIHF1aXp6ZXNUYWtlbjogdGhpcy51c2VyLnF1aXp6ZXNUYWtlbisxLA0KICAgICAgICAgIHBvaW50c0Vhcm5lZDogdGhpcy51c2VyLnBvaW50c0Vhcm5lZCwNCiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyLnVzZXJuYW1lDQogICAgICAgIH0pOw0KICAgICAgfQ0KICAgICAgLy9VUERBVEUgVVNFUiBJTiBEQg0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKQ0KICAgIH0NCiAgfSwNCg0KICBhc3luYyBiZWZvcmVNb3VudCgpIHsNCiAgICB0aGlzLmN1cnJlbnRJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdRdWVzdGlvbnNJZCcpDQogICAgdGhpcy5nZXRJdGVtcygpOw0KICAgIGxldCBjdXJyZW50VXNlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdDdXJyZW50VXNlcicpDQogICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCIvYXBpL2FjY291bnQvIiArIGN1cnJlbnRVc2VyKTsNCiAgICBpZiAoY3VycmVudFVzZXIpIHsNCiAgICAgIHRoaXMubG9nZ2VkSW4gPSBjdXJyZW50VXNlcg0KICAgICAgdGhpcy51c2VyID0gcmVzcG9uc2UuZGF0YQ0KICAgIH0NCiAgfSwNCn0NCg=="},{"version":3,"sources":["Questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Questions.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<div class=\"admin\">\r\n  <router-link v-if=\"!loggedIn\" to=\"/account\">Log In</router-link>\r\n  <div class=\"userInfo\" v-if=\"user\">\r\n    <div class=\"circle\">{{loggedIn[0]}}</div>\r\n    <router-link v-if=\"loggedIn\" to=\"/account\">{{loggedIn}}</router-link>\r\n    <h2>You have completed {{user.quizzesTaken}} quizzes!</h2>\r\n    <h2>In total you have earned {{user.pointsEarned}} points!</h2>\r\n    </div>\r\n  <h1>Quiz!</h1>\r\n  <p v-if=\"previousCorrect\">You got the last one right!</p>\r\n  <div v-if=\"(position < questions.length)\" class=\"activeQ\">\r\n    <h2>{{questions[position].text}}</h2>\r\n    <input type=\"radio\" id=\"true\" name=\"answer\" value=\"true\">\r\n    <label for=\"true\">True</label><br>\r\n    <input type=\"radio\" id=\"false\" name=\"answer\" value=\"false\">\r\n    <label for=\"false\">False</label><br>\r\n    <button @click=\"goToNext()\">Submit</button>\r\n  </div>\r\n  <div v-if=\"(position >= questions.length)\">\r\n    <h2>Quiz Complete!</h2>\r\n    <button @click=\"returnHome()\">Return to home</button>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n.image h2 {\r\n  font-style: italic;\r\n  font-size: 1em;\r\n}\r\n\r\n.heading {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.heading h2 {\r\n  margin-top: 8px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.add,\r\n.edit {\r\n  display: flex;\r\n}\r\n\r\n.circle {\r\n  border-radius: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  padding: 8px;\r\n  background: #333;\r\n  color: #fff;\r\n  text-align: center\r\n}\r\n\r\n/* Form */\r\ninput,\r\ntextarea,\r\nselect,\r\nbutton {\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 1em;\r\n}\r\n\r\n.form {\r\n  margin-right: 50px;\r\n}\r\n\r\n/* Uploaded images */\r\n.upload h2 {\r\n  margin: 0px;\r\n}\r\n\r\n.upload img {\r\n  max-width: 300px;\r\n}\r\n\r\n#true {\r\n  padding-bottom: 6px;\r\n}\r\n#false {\r\n  padding-bottom: 6px;\r\n}\r\n\r\n\r\n.activeQ {\r\n    border: 3px solid black;\r\n    background-color: #B7918C;\r\n    padding-left: 16px;\r\n    padding-bottom: 6px;\r\n}\r\n\r\n/* Suggestions */\r\n.suggestions {\r\n  width: 200px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.suggestion {\r\n  min-height: 20px;\r\n}\r\n\r\n.suggestion:hover {\r\n  background-color: #5BDEFF;\r\n  color: #fff;\r\n}\r\n\r\n.userInfo {\r\n  background-color: #B7918C;\r\n  padding: 5px;\r\n  border: 3px solid black;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n</style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'Questions',\r\n  data() {\r\n    return {\r\n      currentId: \"\",\r\n      questions: [],\r\n      position: 0,\r\n      previousCorrect: 0,\r\n      loggedIn: \"\",\r\n      user: null,\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    async getItems() {\r\n      try {\r\n        let tile = this.currentId\r\n        let response = await axios.get(\"/api/questions/\" + tile);\r\n        this.questions = response.data;\r\n        return true;\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    goToNext() {\r\n      const rbs = document.querySelectorAll('input[name=\"answer\"]');\r\n        let correctAns = this.questions[this.position].answer\r\n        for (const opt of rbs) {\r\n          if (opt.checked) {\r\n            if (correctAns == opt.value) {\r\n              this.previousCorrect = 1;\r\n              if (this.user) {\r\n                  this.user.pointsEarned += 1;\r\n              }   \r\n            } else {\r\n              this.previousCorrect = 0;\r\n            }\r\n          }\r\n        }\r\n      this.position += 1;\r\n    },\r\n    returnHome() {\r\n      if (this.user) {\r\n        //console.log(\"hay user\")\r\n        axios.put(\"/api/account\", {\r\n          quizzesTaken: this.user.quizzesTaken+1,\r\n          pointsEarned: this.user.pointsEarned,\r\n          username: this.user.username\r\n        });\r\n      }\r\n      //UPDATE USER IN DB\r\n      this.$router.push(\"/\")\r\n    }\r\n  },\r\n\r\n  async beforeMount() {\r\n    this.currentId = localStorage.getItem('QuestionsId')\r\n    this.getItems();\r\n    let currentUser = localStorage.getItem('CurrentUser')\r\n    let response = await axios.get(\"/api/account/\" + currentUser);\r\n    if (currentUser) {\r\n      this.loggedIn = currentUser\r\n      this.user = response.data\r\n    }\r\n  },\r\n}\r\n</script>\r\n"]}]}